test = list('est'=df)
View(test)
install.packages('GOplot')
install.packages("GOplot")
df <- read.csv('kegg_serum.csv')
View(df)
# # Building the circ object
circ <- circle_dat(EC$david, EC$genelist)
## Not run:
# # Load the included dataset
data(EC)
library('GOplot')
## Not run:
# # Load the included dataset
data(EC)
circ <- circle_dat(EC$david, EC$genelist)
View(circ)
df <- read.csv('kegg_serum.csv')
GOCircle(df)
summary(df)
GOCircle(df)
install_github('wencke/wencke.github.io')
library(devt)
library(devtools)
install_github('wencke/wencke.github.io')
library(devtools)
install_github('wencke/wencke.github.io')
devtools::install_github("wencke/wencke.github.io")
install.packages('htmltools')
install.packages("htmltools")
library(htmltools)
devtools::install_github("wencke/wencke.github.io")
install.packages('GOplot')
df <- read.csv('kegg_serum.csv')
GOCircle(df)
GOCircle(df)
library(GOplot)
df <- read.csv('kegg_serum.csv')
GOCircle(df)
detach("package:base", unload = TRUE)
detach("package:GOplot", unload = TRUE)
library(GOplot)
devtools::install_github("wencke/wencke.github.io")
df <- read.csv('kegg_serum.csv')
GOCircle(df)
df <- read.csv('kegg_serum.csv')
View(df)
GOCircle(df)
install.packages('corrplot')
library(corrplot)
setwd("C:/Data/Analysis/DAGMAR_IIH/IIH_Serum")
data = read.csv("corr_serum.csv")
M = cor(data)
mode(data)
data = as.matrix(data)
mode(data)
df = read.delim(file = 'corr_serum.tsv')
M = cor(df)
df = read.delim(file = 'corr_serum.tsv', header=T)
M = cor(df)
mode(df)
df = read.delim(file = 'corr_serum.tsv', header=TRUE, row.names = 1)
M = cor(df)
corrplot(M, method = 'color')
# Objective
- Enrichment of formerly sialylated N-linked (SAN-) glycopeptides using MagReSynÂ® Zr-IMAC HP
setwd("C:/Data/Projects/PTMs/MISAME3/Feb_2024_MISAME/NMP")
# download package from bioconductor
if (!requireNamespace('BiocManager', quietly = TRUE))
install.packages('BiocManager')
BiocManager::install('EnhancedVolcano')
# load the package
library(EnhancedVolcano)
df = read.delim(file = 'volcano.tsv', header=TRUE, row.names = 1)
# download package from bioconductor
if (!requireNamespace('BiocManager', quietly = TRUE))
install.packages('BiocManager')
BiocManager::install('EnhancedVolcano')
# load the package
library(EnhancedVolcano)
df = read.delim(file = 'volcano.tsv', header=TRUE, row.names = 1)
# download package from bioconductor
if (!requireNamespace('BiocManager', quietly = TRUE))
install.packages('BiocManager')
BiocManager::install('EnhancedVolcano')
# load the package
library(EnhancedVolcano)
df = read.delim(file = 'volcano.tsv', header=TRUE, row.names = 1)
View(df)
setwd("C:/Data/Projects/PTMs/MISAME3/Feb_2024_MISAME/NMP")
df = read.delim(file = 'volcano.tsv', header=TRUE, row.names = 1)
View(df)
df = read.delim(file = 'volcano.tsv', header=TRUE, row.names = 1)
View(df)
EnhancedVolcano(df,
lab = rownames(df),
x = 'log2FoldChange',
y = 'pvalue',
selectLab = c('PGRP2_HUMAN','ECM_HUMAN','PSG7_HUMAN',
'LG3BP_HUMAN','BTD_HUMAN','FBLN!_HUMAN'),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.1,
FCcutoff = 0.1,
pointSize = 4.0,
labSize = 6.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
colAlpha = 1,
legendPosition = 'right',
legendLabSize = 8,
legendIconSize = 4.0,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black',xlim=c(-2, 2), ylim = c(0,8))
EnhancedVolcano(df,
lab = rownames(df),
x = 'log2FoldChange',
y = 'pvalue',
selectLab = c('PGRP2_HUMAN','ECM_HUMAN','PSG7_HUMAN',
'LG3BP_HUMAN','BTD_HUMAN','FBLN!_HUMAN'),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 4.0,
labSize = 6.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
colAlpha = 1,
legendPosition = 'right',
legendLabSize = 8,
legendIconSize = 4.0,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black',xlim=c(-2, 2), ylim = c(0,8))
EnhancedVolcano(df,
lab = rownames(df),
x = 'log2FoldChange',
y = 'pvalue',
selectLab = c('PGRP2_HUMAN','ECM_HUMAN','PSG7_HUMAN',
'LG3BP_HUMAN','BTD_HUMAN','FBLN!_HUMAN'),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 4.0,
labSize = 6.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
colAlpha = 1,
legendPosition = 'right',
legendLabSize = 8,
legendIconSize = 4.0,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black',xlim=c(-2, 2), ylim = c(0,3))
View(data)
setwd("C:/Users/BhosaleS/Downloads")
df = read.delim(file = 'corr.tsv', header=TRUE, row.names = 1)
df = read.delim(file = 'corr.tsv', header=TRUE, row.names = 1)
View(df)
df = read.delim(file = 'corr.tsv', header=TRUE)
View(df)
View(df)
df = read.delim(file = 'corr.tsv', header=TRUE, row.names = 1)
View(df)
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
install.packages('ggscatter')
library(ggscatter)
install.packages("ggScatRidges")
library(ggScatRidges)
library(ggscatter)
install.packages('ggscatter')
install.packages("ggpubr")
install.packages("ggpubr")
library(ggscatter)
library(ggscatter)
library(ggpubr)
library(ggscatter)
library(ggscatter)
install.packages("ggscatter")
library(ggscatter)
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(10, 13), # setting up the x and y-axis dimension
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(10.5, 13), # setting up the x and y-axis dimension
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01)
sp + stat_cor(aes(color = group), label.x = 3)
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
color = "group", palette = "jco",
add = "reg.line", conf.int = TRUE)
sp + stat_cor(aes(color = group), label.x = 3)
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(10.5, 13), # setting up the x and y-axis dimension
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01)
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(10.5, 13), # setting up the x and y-axis dimension
group = rep(c('IIH', 'Con'), each = 15),
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_line(aes(col = group))
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_dotplot(aes(col = group))
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
library(ggscatter)
esquisser()
library(esquisse)
library(esquisse)
esquisser()
df = read.delim(file = 'corr.tsv', header=TRUE, row.names = 1)
ggplot(df) +
aes(x = CACNA2D3, y = ICP_cm_H2O, colour = group) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
ggplot(df) +
aes(x = CACNA2D3, y = ICP_cm_H2O, colour = group) +
geom_point(shape = "circle", size = 3) +
scale_color_hue(direction = 1) +
theme_minimal()
ggplot(df) +
aes(x = CACNA2D3, y = ICP_cm_H2O, colour = group, add = "reg.line") +
geom_point(shape = "circle", size = 3) +
scale_color_hue(direction = 1) +
theme_minimal()
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
setwd("C:/Users/BhosaleS/Downloads")
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
View(df)
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
View(df)
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = rep(c('IIH', 'Con'), each = 15),
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = rep(c('IIH', 'Con')(c('49','32'))),
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = rep(c('IIH',49),('Con',32))
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = rep(c('IIH', 'Con'), each = 49),
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_gmcl2.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp <- ggscatter(df, x = "GMCL2", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_gmcl2.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "GMCL2", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "GMCL2", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlim=c(14, 17), # setting up the x and y-axis dimension
group = group,
)
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
# setting up the x and y-axis dimension
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
# Add correlation coefficient
sp + stat_cor(method = "spearman", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_basp1.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
sp + xlim=c(14, 17) # setting up the x and y-axis dimension
sp <- ggscatter(df, x = "BASP1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_CACNA2D3.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "CACNA2D3", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_islr.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "ISLR", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_prg4.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "PRG4", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_prg4.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "PRG4", y = "BMI",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
df = read.delim(file = 'corr_mdh.tsv', header=TRUE, row.names = 1)
View(df)
group = c(rep("IIH",49), rep("Con",32))
sp <- ggscatter(df, x = "MDH", y = "BMI",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
sp <- ggscatter(df, x = "MDH1", y = "BMI",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp <- ggscatter(df, x = "MDH1", y = "ICP_cm_H2O",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
group = group,
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01) + geom_point(aes(col = group))
if(!requireNamespace("devtools", quietly = TRUE)){
install.packages("devtools")
}
devtools::install_github("marseille-proteomique/DIAgui")
library(DIAgui)
library(DIAgui)
runDIAgui()
runDIAgui()
